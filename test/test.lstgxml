<?xml version="1.0" encoding="utf-8"?>
<Root>
  <DefinitionRoot>
    <ServiceDefinition serviceShortName="vm">
      <_.serviceDeclaration><![CDATA[{
  "$type": "LuaSTGEditorSharpV2.ViewModel.Configurable.ConfigurableViewModelProvider, LuaSTGEditorSharpV2.ViewModel, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
  "TypeUID": "test",
  "Captures": [ "name" ],
  "Icon": "pack://application:,,,/LuaSTGEditorSharpV2.Resources.Shared;component/images/nodes/16x16/codeblock.png",
  "Text": "test: {0}",
  "LocalizedText": { "zh": "测试：{0}" }
}]]></_.serviceDeclaration>
    </ServiceDefinition>
  </DefinitionRoot>
  <BuildRoot>
    <DefaultLuaSTGBuilding taskName="test" outputName="SHARPV2_TEST" />
    <CompositeTask taskName="test2">
      <ParseContextVariableTask>
        <BuildTaskProperty propertyName="source">
          <EditorPathBuildSource />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetVariable">
          <ToContextVariableBuildTarget key="ROOT_LUA" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="mapper">
          <CombinePathBuildMapper toAppend="package\LegacyNode\root.lua" />
        </BuildTaskProperty>
      </ParseContextVariableTask>
      <ParseContextVariableTask>
        <BuildTaskProperty propertyName="source">
          <FromSettingsBuildSource settingsJPath="build.target_dir" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetVariable">
          <ToContextVariableBuildTarget key="OUTPUT_TARGET" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="mapper">
          <CombinePathBuildMapper toAppend="SHARPV2_TEST_2" />
        </BuildTaskProperty>
      </ParseContextVariableTask>
      <CodeGenerationTask>
        <BuildTaskProperty propertyName="source">
          <DocumentPathBuildSource />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetVariable">
          <ToContextVariableBuildTarget key="GENERATED_CODE" />
        </BuildTaskProperty>
      </CodeGenerationTask>
      <CaptureResourceGroupTask>
        <BuildTaskProperty propertyName="source">
          <DocumentPathBuildSource />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="gatheredResourcePath">
          <ToContextVariableBuildTarget key="GATHERED_RESOURCE_PATH" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="gatheredNameInPackage">
          <ToContextVariableBuildTarget key="GATHERED_RESOURCE_TARGET" />
        </BuildTaskProperty>
      </CaptureResourceGroupTask>
      <CopyTask targetName="_editor_output.lua">
        <BuildTaskProperty propertyName="source">
          <FromContextVariableBuildSource key="GENERATED_CODE" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetArchivePath">
          <FromContextVariableBuildSource key="OUTPUT_TARGET" />
        </BuildTaskProperty>
      </CopyTask>
      <CopyTask>
        <BuildTaskProperty propertyName="source">
          <FromContextVariableBuildSource key="GATHERED_RESOURCE_PATH" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetName">
          <FromContextVariableBuildSource key="GATHERED_RESOURCE_TARGET" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetArchivePath">
          <FromContextVariableBuildSource key="OUTPUT_TARGET" />
        </BuildTaskProperty>
      </CopyTask>
      <CopyTask targetName="root.lua">
        <BuildTaskProperty propertyName="source">
          <FromContextVariableBuildSource key="ROOT_LUA" />
        </BuildTaskProperty>
        <BuildTaskProperty propertyName="targetArchivePath">
          <FromContextVariableBuildSource key="OUTPUT_TARGET" />
        </BuildTaskProperty>
      </CopyTask>
    </CompositeTask>
  </BuildRoot>
  <CompileRoot>
    <DefineBullet identifier="test_bullet">
      <BulletInit parameters="what did genshin do with you!?" style="grain_a" color="COLOR_RED" stay="true" destroyable="false" />
    </DefineBullet>
    <LocalVariable count="2" name_0="a" value_0="1" name_1="b" name_2="c" />
    <UseResourceGroup name="1">
      <Include path="test.lua" />
      <Task>
        <Task>
          <CodeBlock name="bb" />
          <Repeat times="5" count="2" name_0="a" init_0="1" increment_0="1" name_1="b" init_1="2" increment_1="2" name_2="c" init_2="3" increment_2="3">
            <CreateSimpleBullet style="ball_mid" color="COLOR_BLUE" position="0,120" velocity="3" rotation="-90" aim="false" omega="3" stay="false" destroyable="true" delay="0" rebound="false" acceleration="0.03" accel_angle="-90" max_velocity="0" shuttle="false" />
          </Repeat>
          <CreateBullet identifier="test_bullet" position="0,120" parameters="you can skip playing!" />
          <SetVelocity target="last" velocity="1" angle="0" aim="true" set_rotation="true" />
          <SetBlendMode target="last" blend_mode="mul+add" argb="255,255,192,255" />
          <AttachedTask target="last">
            <RedirectSelf />
            <Code code="local v = 1" />
            <Repeat times="60" count="2" name_0="a" init_0="1" increment_0="1" name_1="b" init_1="2" increment_1="2" name_2="c" init_2="3" increment_2="3">
              <SetVelocity target="self" velocity="v" angle="0" aim="true" set_rotation="true" />
              <Code code="v = v + 0.01" />
              <Wait />
            </Repeat>
            <SetAcceleration target="self" acceleration="0.01" accel_angle="0" aim="true" />
          </AttachedTask>
          <Code>
            <_.code><![CDATA[do
end]]></_.code>
          </Code>
          <If condition="1 == 1">
            <If.Then>
              <Test code="AAAAAAA" />
            </If.Then>
            <If.ElseIf condition="nmsl ~= nil">
              <Code>
                <_.code><![CDATA[do
end]]></_.code>
              </Code>
            </If.ElseIf>
          </If>
        </Task>
      </Task>
    </UseResourceGroup>
  </CompileRoot>
</Root>